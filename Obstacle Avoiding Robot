
#include <Servo.h>

const int trigPin = D5;
const int echoPin = D6;

const int motor1Pin1 = D1;
const int motor1Pin2 = D2;
const int motor2Pin1 = D3;
const int motor2Pin2 = D7;

const int servoPin = D4;
Servo myServo;

const int distanceThreshold = 15;

void setup() {
  pinMode(motor1Pin1, OUTPUT);
  pinMode(motor1Pin2, OUTPUT);
  pinMode(motor2Pin1, OUTPUT);
  pinMode(motor2Pin2, OUTPUT);
  pinMode(trigPin, OUTPUT);
  pinMode(echoPin, INPUT);
  myServo.attach(servoPin);
  myServo.write(90);
  Serial.begin(9600);
}

void loop() {
  long distance = measureDistance();
  Serial.print("Distance: ");
  Serial.println(distance);

  if (distance < distanceThreshold) {
    stopMotors();
    delay(500);
    int clearDirection = scanForClearPath();
    if (clearDirection == -1) {
      turnRight();
      delay(1000);
    } else if (clearDirection == 0) {
      turnLeft();
      delay(500);
    } else {
      turnRight();
      delay(500);
    }
  } else {
    moveForward();
  }

  delay(100);
}

long measureDistance() {
  digitalWrite(trigPin, LOW);
  delayMicroseconds(2);
  digitalWrite(trigPin, HIGH);
  delayMicroseconds(10);
  digitalWrite(trigPin, LOW);
  long duration = pulseIn(echoPin, HIGH);
  long distance = duration * 0.034 / 2;
  return distance;
}

void moveForward() {
  digitalWrite(motor1Pin1, HIGH);
  digitalWrite(motor1Pin2, LOW);
  digitalWrite(motor2Pin1, HIGH);
  digitalWrite(motor2Pin2, LOW);
}

void stopMotors() {
  digitalWrite(motor1Pin1, LOW);
  digitalWrite(motor1Pin2, LOW);
  digitalWrite(motor2Pin1, LOW);
  digitalWrite(motor2Pin2, LOW);
}

void turnRight() {
  digitalWrite(motor1Pin1, LOW);
  digitalWrite(motor1Pin2, HIGH);
  digitalWrite(motor2Pin1, HIGH);
  digitalWrite(motor2Pin2, LOW);
}

void turnLeft() {
  digitalWrite(motor1Pin1, HIGH);
  digitalWrite(motor1Pin2, LOW);
  digitalWrite(motor2Pin1, LOW);
  digitalWrite(motor2Pin2, HIGH);
}

int scanForClearPath() {
  int clearDirection = -1;
  myServo.write(0);
  delay(500);
  long distanceLeft = measureDistance();
  Serial.print("Left Distance: ");
  Serial.println(distanceLeft);
  myServo.write(180);
  delay(500);
  long distanceRight = measureDistance();
  Serial.print("Right Distance: ");
  Serial.println(distanceRight);
  myServo.write(90);
  delay(500);
  if (distanceLeft > distanceThreshold && distanceRight > distanceThreshold) {
    clearDirection = (distanceLeft > distanceRight) ? 0 : 1;
  } else if (distanceLeft > distanceThreshold) {
    clearDirection = 0;
  } else if (distanceRight > distanceThreshold) {
    clearDirection = 1;
  }
  return clearDirection;
}
```
